@model FinalProjectMVC.Models.UserAndMessages

@{
    ViewBag.Title = "User";
}



@{
    if (Model.User.id != (int)Session["User"]) //if the logged in user is not on their own page 
    {
        <h2><img class="avataricon" src="@Model.User.avatar" alt="user avatar" class="img-circle">User: @Model.User.name </h2>

        if (!Model.IsFollowing)
        {
            using (Html.BeginForm("Follow", "Follow"))
            {
                <input type="hidden" name="Follow.followed_id" value="@Model.User.id">
                <input type="hidden" name="Follow.follower_id" value="@Convert.ToInt32(Session["User"])">
                <button type="submit" class="btn btn-default">Follow</button><br><br>
            }
        }
        else
        {
            using (Html.BeginForm("Delete", "Follow", new { id = Model.Follow.id }, FormMethod.Post, new { method = "DELETE" }))
            {
                <button type="submit" class="btn btn-danger">Unfollow</button><br><br>
            }
        }
        <hr>

        //since its in the if-else, users can only post messages on others pages and not thier own
        using (Html.BeginForm("PostMessage", "Message", new { id = Model.User.id }, FormMethod.Post))
        {   
            <div class="form-group">
                @Html.LabelFor(m => m.Message.message);
                @Html.TextBoxFor(m => m.Message.message, new { @placeholder = "Message for " + @Model.User.name })
                <button type="submit" class="btn btn-primary">Post Message</button>
            </div>


        }
    }
    else {
        <h2><img class="avataricon" src="@Model.User.avatar" alt="user avatar" class="img-circle">Your Home Page</h2>
        @*@Html.ActionLink("Edit Your Information", "Edit", "User", new { area = "" }, new { @class = "navbar-brand" })*@
    }
}

<p>@TempData["Login"]</p>

@{
    if (Model.Messages.Any()) //was throwing errors so i added a check to see if messages existed for a user
    {
        foreach (var msg in Model.Messages)
        {
            <div class="well">
                <h2>Message: <b>@msg.message</b></h2>
                <h4>From: <b>@msg.Messager.name</b></h4>
                <h6>At: @msg.created_at</h6>

                @if (msg.Messager.id == Convert.ToInt32(Session["User"])) //if the user logged in postted the message they have the ability to delete it
                {
                    using (Html.BeginForm("Delete", "Message", new { id = @msg.id }, FormMethod.Post, new { method = "DELETE" }))
                    {
                        <button type="submit" class="btn btn-danger" value="delete">Delete Your Message</button>
                    }
                }
                <br>
                <br>
                <hr>


               @using (Html.BeginForm("PostComment", "Comment"))
               {

                @Html.LabelFor(m => m.Comment.comment);
                @Html.TextBoxFor(m => m.Comment.comment, new { @placeholder = "Comment on this Message" })
                <input type="hidden" name="@Html.NameFor(m => m.Comment.message_id)" value="@msg.id" />

                @Html.ValidationMessageFor(m => m.Comment.comment)
                <button type="submit" class="btn btn-info">Post Comment</button>


               }

                

                @foreach (var c in Model.Comments)
                {  
                    if (c.Comment.message_id == msg.id)
                    {   <div class="well">
                            <p><b>@c.Comment.User.name</b> commented: <b>@c.Comment.comment</b> at: @c.Comment.created_at</p>

                            @if(c.Comment.user_id == Convert.ToInt32(Session["User"])) //only comemnts the logged in user posted can be deleted 
                            {
                                using (Html.BeginForm("Delete", "Comment", new { id = c.Comment.id }, FormMethod.Post, new { method = "DELETE" }))
                                {
                                <button type="submit" class="btn btn-danger" value="delete">Delete Comment</button>
                                }
                            }

                            @using (Html.BeginForm("Like", "Like", new { id = c.Comment.id }))
                            {
                            <button type="submit" class="btn btn-default" value="delete">Like</button>
                            }
                            <h6>Likes: @c.LikesCount.ToString()</h6>
                        </div>
                        <hr><hr>


                    }
                  

                


                }


            </div>
        }
    }

} 


